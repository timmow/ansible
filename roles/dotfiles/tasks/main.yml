---
- include: ubuntu.yml
  when: ansible_os_family == "Debian"
  tags: sudo
- include: ubuntu_unprivileged.yml
  when: ansible_os_family == "Debian"
- name: Create a repo if it does not exist
  with_items: "{{dotfiles.timmow.git.repos}}"
  file:
    path: "{{ item.dest }}"
    state: directory
    mode: '0755'
- name: Check Git Repos
  shell: "if [[ $(git rev-list  --count origin/master...master) -ne 0 ]]; then exit 1; fi"
  args:
    chdir: "{{ item.dest }}"
  with_items: "{{dotfiles.timmow.git.repos}}"
  tags: dotfiles
- name: Git Repos
  git: repo={{ item.repo }} dest={{ item.dest }} accept_hostkey=yes force=no
  with_items: "{{dotfiles.timmow.git.repos}}"
  tags: dotfiles
  ignore_errors: yes
- name: Git Repos config
  git_config:
    name: remote.origin.pushurl
    repo: "{{ item.dest }}"
    scope: local
    value: "{{ item.repo | regex_replace('://([^/]*)/', '@\\1:') }}"
  with_items: "{{dotfiles.timmow.git.repos}}"
  tags: dotfiles
- name: vagrant_dir
  file: path="~/.vagrant.d" state=directory
- name: config_dir
  file: path="~/.config" state=directory
- name: nvim_config_dir
  file: path="~/.config/nvim" state=directory
- name: nvim config symlinik
  file:
    src: ~/src/ansible/roles/dotfiles/files/config/nvim/init.vim
    dest: ~/.config/nvim/init.vim
    state: link
- name: src_dir
  file: path="~/src" state=directory
- name: dotfile repos symlinks
  file: src={{ item.src }} dest={{ item.dst }} state=link
  with_items: "{{dotfiles.timmow.symlinks}}"
- name: tmp_dir
  file: path="~/tmp" state=directory
- name: link dotfiles
  file: src=~/src/ansible/roles/dotfiles/files/simple/{{ item | basename }} dest=~/.{{ item | basename }} state=link
  with_fileglob:
    - ./simple/*
  tags: dotfiles
- name: bindir
  file:
    path: ~/bin
- name: git deploy
  get_url:
    url: https://raw.githubusercontent.com/ipwnponies/dotfiles/master/bin/git-deploy
    dest: ~/bin/git-deploy
    mode: 0755
